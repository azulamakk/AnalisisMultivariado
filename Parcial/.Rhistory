drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
View(drogas)
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
library(dplyr)
data <- drogas %>% select('DrugUse', 'BingeDrink', 'Poverty', 'HSDrop')
data <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSDrop)
data <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop)
data <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
# Estimar matriz de correlaciones
cor(data)
scale(X,center=TRUE, scale= FALSE)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
scale(X,center=TRUE, scale= FALSE)
cor(X)
pairs(X)
corrplot(X, method = "color", type = "upper")
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# Centramos los datos
scale(X,center=TRUE, scale= FALSE)
cor(X)
corrplot(X, method = "color", type = "upper")
corrplot(cor(X), method = "color", type = "upper")
cor(X)
XEscalado <- scale(X)
covarianzas <- cov(XEscalado)
eigen_result = eigen(covarianzas)
autovectores = eigen_result$vectors[ , 1:2]
scores = XEscalado %*% autovectores
# Estandarización de los datos
XEscalado <- scale(X)
# Estimación de la matriz de covarianza
covarianzas <- cov(XEscalado)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_result = eigen(covarianzas)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectores = eigen_result$vectors[ , 1:2]
# Transformación lineal de los datos
scores = XEscalado %*% autovectores
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCA <- diag(eigen_result$values)
covarianzas
matrizCovarianzasPCA
varTotalExplicada <- suma2Comp/sumaAutovalores
sumaAutovalores <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2Comp <- 1.841361 + 1.112605
varTotalExplicada <- suma2Comp/sumaAutovalores
varTotalExplicada
# --------------------- b
# Estimación de la matriz de covarianza
covarianzas <- cov(X)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_result = eigen(covarianzas)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectores = eigen_result$vectors[ , 1:2]
# Transformación lineal de los datos
scores = X %*% autovectores
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCA <- diag(eigen_result$values)
covarianzas
matrizCovarianzasPCA
sumaAutovalores <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2Comp <- 1.841361 + 1.112605
varTotalExplicada <- suma2Comp/sumaAutovalores
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# --------------------- a
correlaciones <- cor(X)
corrplot(cor(X), method = "color", type = "upper")
# --------------------- b
# Estimación de la matriz de covarianza
covarianzas <- cov(X)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_result = eigen(covarianzas)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectores = eigen_result$vectors[ , 1:2]
# Transformación lineal de los datos
scores = X %*% autovectores
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCA <- diag(eigen_result$values)
covarianzas
matrizCovarianzasPCA
sumaAutovalores <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2Comp <- 1.841361 + 1.112605
varTotalExplicada <- suma2Comp/sumaAutovalores
sumaAutovalores <- 14.80466 + 6.976958 + 2.909444 + 1.048383
suma2Comp <- 14.80466 + 6.976958
varTotalExplicada <- suma2Comp/sumaAutovalores
varTotalExplicada
pairs(X)
scatter_pares <- function(data){
panel.hist <- function(x, ...)
{
usr <- par("usr")
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "lightblue", ...)
}
pairs(data, lower.panel = panel.smooth,
upper.panel= NULL, pch=20, lwd=2, diag.panel = panel.hist,
cex.labels = 1.3)
}
scatter_pares(X)
datosEstandarizados <- scale(X)
covarianzasEst <- cov(datosEstandarizados)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEsr)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEst)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectoresEst = eigen_resultEst$vectors[ , 1:2]
# Transformación lineal de los datos
scoresEst = datosEstandarizados %*% autovectoresEst
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCAEst <- diag(eigen_resultEst$values)
covarianzasEst
matrizCovarianzasPCAEst
# ------------------ c
plot(scores, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
print(autovectores)
print(autovectoresEst)
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
covarianzasEst
print(autovectoresEst)
V <- eigen_resultEst $vectors[,1:2]
Z <- datosEstandarizados %*% V
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-10,10),
ylim = c(-10,10))
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-5,5),
ylim = c(-5,5))
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-3,3))
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
for(j in 1:5){
segments(0,0,3*V[j,1], 3*V[j,2])
arrows(0,0,3*V[j,1], 3*V[j,2], lenght = 0.1) #Cada flecha representa una variable
}
text(rownames(drogas))
text(drogas$State)
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
for(j in 1:5){
segments(0,0,3*V[j,1], 3*V[j,2])
arrows(0,0,3*V[j,1], 3*V[j,2], lenght = 0.1) #Cada flecha representa una variable
}
text(drogas$State)
nombres <- drogas$State
text(Z, nombres, cex = 0.7, col='grey50')
text(D, colnames(dataLogEstandarizada), offset=3, col='firebrick')
D <- 3*cbind(V[,1], V[,2])
text(D, colnames(dataLogEstandarizada), offset=3, col='firebrick')
text(D, colnames(datosEstandarizada), offset=3, col='firebrick')
text(D, colnames(datosEstandarizados), offset=3, col='firebrick')
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
scatter_pares <- function(data){
panel.hist <- function(x, ...)
{
usr <- par("usr")
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "lightblue", ...)
}
pairs(data, lower.panel = panel.smooth,
upper.panel= NULL, pch=20, lwd=2, diag.panel = panel.hist,
cex.labels = 1.3)
}
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# --------------------- a
correlaciones <- cor(X)
corrplot(cor(X), method = "color", type = "upper")
# --------------------- b
datosEstandarizados <- scale(X)
covarianzasEst <- cov(datosEstandarizados)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEst)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectoresEst = eigen_resultEst$vectors[ , 1:2]
# Transformación lineal de los datos
scoresEst = datosEstandarizados %*% autovectoresEst
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCAEst <- diag(eigen_resultEst$values)
covarianzasEst
matrizCovarianzasPCAEst
sumaAutovaloresEst <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2CompEst <- 1.841361 + 1.112605
varTotalExplicadaEst <- suma2CompEst/sumaAutovaloresEst
# --------------------- c
print(autovectoresEst)
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
V <- eigen_resultEst $vectors[,1:2]
Z <- datosEstandarizados %*% V
nombres <- drogas$State
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
for(j in 1:5){
segments(0,0,3*V[j,1], 3*V[j,2])
arrows(0,0,3*V[j,1], 3*V[j,2], lenght = 0.1) #Cada flecha representa una variable
}
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
scatter_pares <- function(data){
panel.hist <- function(x, ...)
{
usr <- par("usr")
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "lightblue", ...)
}
pairs(data, lower.panel = panel.smooth,
upper.panel= NULL, pch=20, lwd=2, diag.panel = panel.hist,
cex.labels = 1.3)
}
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# --------------------- a
correlaciones <- cor(X)
corrplot(cor(X), method = "color", type = "upper")
# --------------------- b
datosEstandarizados <- scale(X)
covarianzasEst <- cov(datosEstandarizados)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEst)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectoresEst = eigen_resultEst$vectors[ , 1:2]
# Transformación lineal de los datos
scoresEst = datosEstandarizados %*% autovectoresEst
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCAEst <- diag(eigen_resultEst$values)
covarianzasEst
matrizCovarianzasPCAEst
sumaAutovaloresEst <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2CompEst <- 1.841361 + 1.112605
varTotalExplicadaEst <- suma2CompEst/sumaAutovaloresEst
# --------------------- c
print(autovectoresEst)
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
V <- eigen_resultEst $vectors[,1:2]
Z <- datosEstandarizados %*% V
nombres <- drogas$State
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
for(j in 1:5){
segments(0,0,3*V[j,1], 3*V[j,2])
arrows(0,0,3*V[j,1], 3*V[j,2], lenght = 0.1) #Cada flecha representa una variable
}
text(Z, nombres, cex = 0.7, col='grey50')
O <- cbind(rep(0,5), rep(0,5))
D <- 3*cbind(V[,1], V[,2])
origen_1 <- O[,1]
origen_2 <- O[,2]
destino_1 <- D[,1]
destino_2 <- D[,2]
segments(origen_1,origen_2,destino_1,destino_2)
arrows(origen_1,origen_2,destino_1,destino_2, length = 0.1, col = 'firebrick', lwd=2)
nombres <- drogas$State
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
O <- cbind(rep(0,5), rep(0,5))
D <- 3*cbind(V[,1], V[,2])
origen_1 <- O[,1]
origen_2 <- O[,2]
destino_1 <- D[,1]
destino_2 <- D[,2]
segments(origen_1,origen_2,destino_1,destino_2)
arrows(origen_1,origen_2,destino_1,destino_2, length = 0.1, col = 'firebrick', lwd=2)
text(D, colnames(dataLogEstandarizada), offset=3, col='firebrick')
text(D, colnames(datosEstandarizados), offset=3, col='firebrick')
text(Z, nombres, cex = 0.7, col='grey50')
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
scatter_pares <- function(data){
panel.hist <- function(x, ...)
{
usr <- par("usr")
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "lightblue", ...)
}
pairs(data, lower.panel = panel.smooth,
upper.panel= NULL, pch=20, lwd=2, diag.panel = panel.hist,
cex.labels = 1.3)
}
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# --------------------- a
correlaciones <- cor(X)
corrplot(cor(X), method = "color", type = "upper")
# --------------------- b
datosEstandarizados <- scale(X)
covarianzasEst <- cov(datosEstandarizados)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEst)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectoresEst = eigen_resultEst$vectors[ , 1:2]
# Transformación lineal de los datos
scoresEst = datosEstandarizados %*% autovectoresEst
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCAEst <- diag(eigen_resultEst$values)
covarianzasEst
matrizCovarianzasPCAEst
sumaAutovaloresEst <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2CompEst <- 1.841361 + 1.112605
varTotalExplicadaEst <- suma2CompEst/sumaAutovaloresEst
# --------------------- c
print(autovectoresEst)
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
V <- eigen_resultEst $vectors[,1:2]
Z <- datosEstandarizados %*% V
nombres <- drogas$State
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
O <- cbind(rep(0,5), rep(0,5))
D <- 3*cbind(V[,1], V[,2])
origen_1 <- O[,1]
origen_2 <- O[,2]
destino_1 <- D[,1]
destino_2 <- D[,2]
segments(origen_1,origen_2,destino_1,destino_2)
arrows(origen_1,origen_2,destino_1,destino_2, length = 0.1, col = 'firebrick', lwd=2)
text(D, colnames(datosEstandarizados), offset=3, col='firebrick')
text(Z, nombres, cex = 0.7, col='grey50')
correlaciones
drogas <- read.csv("~/Universidad/Analisis Multivariado/Parcial/drogas.csv")
scatter_pares <- function(data){
panel.hist <- function(x, ...)
{
usr <- par("usr")
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "lightblue", ...)
}
pairs(data, lower.panel = panel.smooth,
upper.panel= NULL, pch=20, lwd=2, diag.panel = panel.hist,
cex.labels = 1.3)
}
library(dplyr)
library(corrplot)
X <- drogas %>% select(DrugUse, BingeDrink, Poverty, HSdrop) %>% as.matrix()
pairs(X)
# --------------------- a
correlaciones <- cor(X)
corrplot(cor(X), method = "color", type = "upper")
# --------------------- b
datosEstandarizados <- scale(X)
covarianzasEst <- cov(datosEstandarizados)
# Cálculo de los autovalores y autovectores de la matriz de covarianzas
eigen_resultEst = eigen(covarianzasEst)
# Ordenar los autovalores y autovectores: Se ordenan los autovalores de mayor a menor
autovectoresEst = eigen_resultEst$vectors[ , 1:2]
# Transformación lineal de los datos
scoresEst = datosEstandarizados %*% autovectoresEst
# Matriz de covarianzas de los componentes principales
matrizCovarianzasPCAEst <- diag(eigen_resultEst$values)
covarianzasEst
matrizCovarianzasPCAEst
sumaAutovaloresEst <- 1.841361 + 1.112605 + 0.7839599 + 0.2620743
suma2CompEst <- 1.841361 + 1.112605
varTotalExplicadaEst <- suma2CompEst/sumaAutovaloresEst
# --------------------- c
print(autovectoresEst)
# --------------------- d
plot(scoresEst, xlab="Componente Principal 1", ylab="Componente Principal 2", main="Gráfico de Scores PCA")
V <- eigen_resultEst $vectors[,1:2]
Z <- datosEstandarizados %*% V
nombres <- drogas$State
plot(Z, pch=20, xlab='Z1', ylab='Z2', xlim = c(-3,3),
ylim = c(-2,3.5))
O <- cbind(rep(0,5), rep(0,5))
D <- 3*cbind(V[,1], V[,2])
origen_1 <- O[,1]
origen_2 <- O[,2]
destino_1 <- D[,1]
destino_2 <- D[,2]
segments(origen_1,origen_2,destino_1,destino_2)
arrows(origen_1,origen_2,destino_1,destino_2, length = 0.1, col = 'firebrick', lwd=2)
text(D, colnames(datosEstandarizados), offset=3, col='firebrick')
text(Z, nombres, cex = 0.7, col='grey50')
corrplot(cor(X), method = "color", type = "upper")
